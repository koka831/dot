[[plugins]]
repo = 'kana/vim-operator-user'

# for linter
[[plugins]]
repo = 'w0rp/ale'
hook_add  = '''
let g:ale_sign_error = '×'
let g:ale_sign_warning = '▲'
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_enter = 0
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_open_list = 1
nmap <silent> <C-j> <Plug>(ale_next_wrap)

let g:ale_linters = {
\  'python' : ['flake8'],
\  'rust'   : ['rustc'],
\}
'''

# for investigate vim
[[plugins]]
repo = 'mattn/benchvimrc-vim'

# for async
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

# for snippet
[[plugins]]
repo = 'Shougo/neocomplete'
hook_add = '''
let g:acp_enableAtStartup = 0
" Use neocomplete.
let g:neocomplete#enable_at_startup = 1
" Use smartcase.
let g:neocomplete#enable_smart_case = 1
" Set minimum syntax keyword length.
let g:neocomplete#sources#syntax#min_keyword_length = 3
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
let g:neosnippet#snippets_directory='~/.vim/bundle/neosnippet-snippets/snippets/'
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# for :mks
[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'szw/vim-tags'
hook_add = '''
let g:vim_tags_auto_generate = 1
'''

[[plugins]]
repo = 'vim-scripts/DoxygenToolkit.vim'

[[plugins]]
repo = 'majutsushi/tagbar'

# Quickfix highlighter
[[plugins]]
repo = 'jceb/vim-hier'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_theme = 'gruvbox'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'atelierbram/vim-colors_atelier-schemes'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_sign_added = '+'
let g:gitgutter_sign_modified = '~'
let g:gitgutter_sign_removed = '-'
let g:gitgutter_sign_column_always = 1
'''

[[plugins]]
repo = 'scrooloose/NERDTree'
hook_add = '''
let NERDTreeShowHidden=1
'''

[[plugins]]
repo = 'tpope/vim-fugitive'


[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = get(g:, 'quickrun_config', {})
let g:quickrun_config._ = {
    \ 'runner'  : 'vimproc',
    \ 'runner/vimproc/updatetime' : 60,
    \ 'outputter/error/success' : 'buffer',
    \ 'outputter/error/error' : 'quickfix',
    \ 'outputter/buffer/split' : 'rightbelow 8sp',
    \ 'cpp' : {
    \   'type' : 'cpp/g++',
    \   'cmdopt' : '-Wall -pedantic',
    \   },
    \ }
au FileType qf nnoremap <silent><buffer>q :quit<CR>
'''
