[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['unite.vim']

### C
[[plugins]]
repo = 'justmao945/vim-clang'
on_ft = ['c', 'cpp']
hook_add = '''
let g:clang_c_completeopt   = 'menuone,preview'
let g:clang_cpp_completeopt = 'menuone,preview'
let g:clang_dotfile = '.clang_complete'
let g:clang_auto = 0
let g:clang_complete_auto = 0
let g:clang_auto_select = 0
let g:clang_use_library = 1
let g:clang_library_path="/usr/local/lib"
let g:clang_c_options = '-std=c11'
let g:clang_cpp_options = '-std=c++1z -stdlib=libc++ --pedantic-errors'

'''

[[plugins]]
repo = 'vim-scripts/nginx.vim'
on_ft = ['nginx']

### C++ highlighter
[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
on_ft = ['cpp']
hook_add = '''
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_concepts_highlight = 1
let g:cpp_experimental_template_highlight = 1
'''

### Markdown
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['md']
hook_add = '''
let g:vim_markdown_toc_autofit = 1
'''

### Go
[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
let g:go_list_type = "quickfix"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 0
let g:go_def_mapping_enabled = 0
'''

[[plugins]]
repo = 'dgryski/vim-godef'
on_ft = ['go']

### toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

### HTML,CSS,Javascript
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['js', 'jsx', 'javascript']

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = ['jsx', 'js', 'javascript']

[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = ['scala']

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = ['rust']
hook_add = '''
set hidden
let g:racer_cmd = $HOME.'/.cargo/bin/racer'
au FileType rust nmap gd <Plug>(rust-def)
'''

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rs', 'rust']
hook_add = '''
let g:racer_cmd = $HOME.'/.cargo/bin/racer'
 let g:tagbar_type_rust = {
    \ 'ctagstype' : 'rust',
    \ 'kinds' : [
        \'T:types,type definitions',
        \'f:functions,function definitions',
        \'g:enum,enumeration names',
        \'s:structure names',
        \'m:modules,module names',
        \'c:consts,static constants',
        \'t:traits,traits',
        \'i:impls,trait implementations',
    \]
    \}
'''

[[plugins]]
repo = 'vim-python/python-syntax'
on_ft = ['py', 'python']
hook_add = '''
let g:python_highlight_all = 1
'''

[[plugins]]
repo = 'andviro/flake8-vim'
on_ft = ['python']

[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = ['exs', 'ex', 'elixir']
